http {


server {
 listen 8081;
 root /home/rails/rails_project/public;
 server_name _;
 index index.htm index.html;

 location / {
   try_files $uri/index.html $uri.html $uri @app;
 }
 location /admin {
   rewrite ^ https://$host$request_uri? permanent;
 }

 location ~* ^.+\.(jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|pdf|ppt|txt|tar|mid|midi|wav|bmp|rtf|mp3|flv|mpeg|avi)$ {
 try_files $uri @app;
 }

 location @app {
   proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
   proxy_set_header Host $http_host;
   proxy_redirect off;
   proxy_pass http://app_server;
 }
}
server {
 listen 4433 ssl;
 root /home/rails/rails_project/public;

 ssl_certificate /etc/nginx/certs/server/client-ssl.bauland42.com.crt;
 ssl_certificate_key /etc/nginx/certs/server/client-ssl.bauland42.com.key;
 ssl_client_certificate /etc/nginx/certs/ca/ca.crt;
 ssl_verify_client on;
 ssl_session_timeout 1d;
 ssl_session_cache shared:SSL:50m;

 # Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits
 # ssl_dhparam /path/to/dhparam.pem;

 # modern configuration. tweak to your needs.
 ssl_protocols TLSv1.1 TLSv1.2;
 ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK';
 ssl_prefer_server_ciphers on;

 # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
 # add_header Strict-Transport-Security max-age=15768000;

 # OCSP Stapling ---
 # fetch OCSP records from URL in ssl_certificate and cache them
 # ssl_stapling on;
 # ssl_stapling_verify on;

 ## verify chain of trust of OCSP response using Root CA and Intermediate certs
 # ssl_trusted_certificate /path/to/root_CA_cert_plus_intermediates;

 # resolver <IP DNS resolver>;

 location / {
   try_files $uri/index.html $uri.html $uri @app;
 }

 location ~* ^.+\.(jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|pdf|ppt|txt|tar|mid|midi|wav|bmp|rtf|mp3|flv|mpeg|avi)$ {
   try_files $uri @app;
 }

 location @app {
   proxy_set_header X-Client-Dn $ssl_client_s_dn;
   proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
   proxy_set_header Host $http_host;
   proxy_redirect off;
   proxy_pass http://http://hello-world-nginx-secapi.13.81.11.55.nip.io/;
 }
}
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
}
